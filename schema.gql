# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ExampleInput {
  title: String
  content: [String]
  example: [String]
}

type ExampleType {
  title: String
  content: [String]
  example: [String]
}

input LoginInput {
  password: String
  username: String
}

type LoginResult {
  userID: String
  login: Boolean
  token: String
}

type Mutation {
  createNewWord(partOfSpeech: [PartOfSpeechInput], numberOfImage: Float, data: WordInput): String
  createUser(data: UserInput): Boolean
  createPhrase(data: PhraseInput): Phrase
  addTense(input: TenseInput): Tense
}

type PaginateWord {
  docs: [Words]
  next: String
  previous: String
}

input PartOfSpeechInput {
  word: String
  type: String
  phonetic: String
  meaning: String
  example: String
}

type Phrase {
  phrase: String
  word_type: String
  synonym: [String]
  meaning: [String]
  example: String
}

input PhraseInput {
  word_type: String
  phrase: String
  synonym: [String]
  meaning: [String]
  example: String
}

type Query {
  fetchWords(previous: String, limit: Float, next: String): PaginateWord
  getWord(wordID: String): Words
  getVoice(word: String): String
  login(data: LoginInput): LoginResult
  getAllPhrase: [Phrase]
  getTense: [Tense]
  getTenseByName(type: String): Tense
}

input StructureInput {
  type: String
  formula: String
  note: [String]
}

type StructureType {
  type: String
  formula: String
  note: [String]
}

type Tense {
  type: String
  definition: String
  structure: [StructureType]
  usage: [ExampleType]
  hint: [ExampleType]
  rule: [ExampleType]
}

input TenseInput {
  definition: String
  type: String
  structure: [StructureInput]
  hint: [ExampleInput]
  usage: [ExampleInput]
  rule: [ExampleInput]
}

type User {
  username: String
  password: String
}

input UserInput {
  password: String
  username: String
}

input WordInput {
  word: String
  meaning: [String]
  example: [String]
  word_type: String
  synonym: [String]
  partOfSpeech: [PartOfSpeechInput]
}

type Words {
  _id: String
  word: String
  meaning: [String]
  example: [String]
  phonetic: String
  word_type: String
  audio: String
  image_example: String
  synonym: [String]
  partOfSpeech: [WordType]
}

type WordType {
  word: String
  type: String
  phonetic: String
  example: String
}
