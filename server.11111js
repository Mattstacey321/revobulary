const { ApolloServer } = require( "apollo-server-express");
const Express = require( "express");
const reflect = require("reflect-metadata") ;
const { buildSchema } = require("type-graphql") ;
const { connect } = require( "mongoose");
const {WordResolver} = require('./app/resolvers/WordResolvers');

require('dotenv').config();
const main = async () => {
    const schema = await buildSchema({
        resolvers: [
            WordResolver
        ],
        emitSchemaFile: true,
        validate: false,
    });
const mongoose = await connect(process.env.mongodbts, { useNewUrlParser: true });
await mongoose.connection;

const server = new ApolloServer({ schema });
const app = Express();
server.applyMiddleware({ app });
app.listen({ port: 3333 }, () =>
    console.log(`ðŸš€ Server ready and listening at ==> http://localhost:3333${server.graphqlPath}`))
};
main().catch((error) => {
    console.log(error, 'error');
})